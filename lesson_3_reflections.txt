When would you want to use a remote repository rather than keeping all your work local?

Remote repositories are useful for collaboration because they allow multiple people to access the same code set and
update it. They can either start their own branch or make contributions that the original creator of the project can
choose to accept. Remote repositories also may be useful if you're working on multiple computers. You can push your 
latest code to the repository, then later when working on another computer, pull it from the repository onto that 
computer.

Why might you want to always pull changes manually rather than having Git automatically
stay up-to-date with your remote repository?

If you are working on two different computers, there may be a situation where you don't
want something that you did on one computer to automatically update your current computer. 
If other people are collaborating with you and they update a branch on the remote, you 
would not want their changes to automatically update yours either because you may have 
been working on something that you did not want updated.

Describe the differences between forks, clones, and branches. When would you use one 
instead of another?

Forks allow you to copy (clone) a repository from GitHub into a new repository under your
account. This is useful if you do not want to edit someone else's existing repository, but
you want to use it, or if you do not have permission to edit their repository. Commits you make to your forked repository will not update the original repository.

Clones are a copy of a repository. You can use clone to take a repository from GitHub and 
copy it into your local Git. Commits you make to a clone can update the remote and local, 
as long as you use push/pull commands to keep the remote and local in synch.

Branches are a way to divide your code into different areas that allow you to do different
things within the same repository. For example, you could have a "master" branch for your
production code, an "experimental" branch for new ideas you are trying in the code, and a 
"different language" branch if you are translating it. Branches can be merged if needed. 
Branches are a part of repositories, so if you clone or fork, you'll get the branches from 
the original repository.

What is the benefit of having a copy of the last known state of the remote stored locally?

By having the last known state of the remote stored locally, you can get a clear picture 
of what changes you've made on your computer since you last pushed/pulled from the remote. 
It may tell you that you are x commits ahead of the remote. You can then do a git diff 
between the remote and local copy to see what changes you made. This allows you to review 
before you push anything back to the remote. You can also merge your local branch with the 
remote branch once you are ready (with a git fetch) and then merge them. At that point, 
you'll be able to see that the remote and local are in synch.

How would you collaborate without using Git or GitHub? What would be easier, and what 
would be harder?

Without Git or GitHub, I would save multiple copies of my files. When I made changes, I 
would update the filename (maybe with a date-time stamp or version number at the end). I 
would then send my latest file in an email to someone. At the same time, I may have to 
send the original file so that they could compare (if necessary), or in my email explain 
the changes and pull out some relevant pieces of code they should focus on. This would be
more difficult to easily keep track of which file we are both on as far as the latest code.
It also would be more difficult to highlight changes and comment on changes (more manual 
work involved). The only thing that I think would be easier is that you would not have to 
understand Git or GitHub and all of its commands. If I am working with someone who is not
on GitHub, it would be more difficult to get them on there and fill them in on how to use 
it.

Making an edit on Windows.

Windows edit #2.

Testing Sublime as default commit editor on Windows 7 - 64 Bit.